{"version":3,"sources":["webpack://dull/./src/main/color.js","webpack://dull/./src/matchGame/matchingGame.js","webpack://dull/./src/mixPathGame/mixPathGame.js","webpack://dull/./src/snake/colorFood.js","webpack://dull/./src/snake/moves.js","webpack://dull/./src/snake/snake.js","webpack://dull/./src/snake/snakeGame.js","webpack://dull/webpack/bootstrap","webpack://dull/webpack/runtime/define property getters","webpack://dull/webpack/runtime/hasOwnProperty shorthand","webpack://dull/webpack/runtime/make namespace object","webpack://dull/./src/index.js"],"names":["COLORS","randomColor","num","Math","floor","random","color","mixColor","color1","color2","c1","chroma","c2","mix","hex","avg","num1","num2","mixTilesTwo","hex1","hex2","$","Color","rgba","r","g","b","rgb","pickColors","tileAmount","colors","i","includes","colorObj","push","shuffle","array","length","j","tileColors","matchGrid","count","selectedTiles","selectedTileIds","tilesCorrect","createMatchGrid","concat","tile","document","createElement","setAttribute","style","addEventListener","flipTile","getElementsByClassName","querySelector","appendChild","display","checkPair","cards","querySelectorAll","x","y","alert","textContent","tileId","getAttribute","setTimeout","tileGrid","optionTiles","mixedTiles","currentTile","allTiles","randomPos","coor","posObject","coorArr","split","createMixGrid","colorCount","colorId","mixTile","info","ele","console","log","markOptions","OPTIONS","border","newOptionTiles","forEach","pos","newX","newY","newCoor","optionTile","clickedCoor","check","some","clearStyle","colorOne","colorTwo","oldTile","getTilePosition","BODY_ADD","LIVES","FOOD_COLORS","FOOD_ADD","target","updateTarget","SNAKE_COLOR","body","updateColorFood","snakeEat","shift","snakeAdd","foodAdd","amount","food","drawColorFood","gameBoard","foodElement","gridRowStart","gridColumnStart","classList","add","moveDirection","lastMove","window","e","key","getMoveDirection","SNAKE_SPEED","SNAKE_ADDITIONS","snakeBody","newBody","updateSnake","addBody","move","getSnakePos","snakeOverlap","ignoreHead","snakeEatSelf","drawSnake","part","snakeElement","snake","position","idx","isEqual","pos1","pos2","lastRenderTime","snakeGrid","gameOver","livesDiv","createSnakeGrid","main","currentTime","confirm","location","requestAnimationFrame","secondsSinceRender","update","draw","checkFail","innerHTML","outOfBounds"],"mappings":"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","file":"bundle.js","sourcesContent":["\n\nexport const COLORS = ['#990033', '#993333', '#b30000', '#ff0000', '#cc2900', '#b35900', '#cca300', '#cccc00', '#999900', '#558000', '#b30059', '#b30000', '#ff7733', '#ff6600', '#ff9933', '#ffd633', '#ffcc00', '#e6e600', '#99cc00', '#666633', '#cc0066', '#ff3333', '#ff944d', '#ff9933', '#ffcc00', '#ffff00', '#ffff66', '#ccff33', '#669900', '#336600', '#ff0066', '#ff5050', '#ff6666', '#ff9966', '#ffcc66', '#ffff99', '#ccff66', '#99ff66', '#33cc33', '#339933', '#cc3399', '#ff3399', '#ff6699', '#ff9999', '#ffcc99', '#ffffcc', '#ccff99', '#99ff99', '#66ff66', '#00cc66', '#cc00cc', '#ff66ff', '#ff99ff', '#ffb3d1', '#ffe6f0', '#ffffff', '#ccffcc', '#99ffcc', '#00ff99', '#339966', '#993399', '#b300b3', '#d966ff', '#e6ccff', '#f2e6ff', '#e6f2ff', '#e6ffff', '#66ffff', '#00cc99', '#009999', '#9900cc', '#cc33ff', '#cc66ff', '#cc99ff', '#e6ccff', '#b3d7ff', '#b3ffff', '#00e6e6', '#00b3b3', '#336699', '#6600cc', '#9933ff', '#9966ff', '#9999ff', '#b3b3ff', '#90c0f0', '#80ccff', '#73b4fa', '#4d4dff', '#003d99', '#4d0099', '#7a00cc', '#a366ff', '#6666ff', '#8080ff', '#007bff', '#0099ff', '#007acc', '#0000cc', '#000080']\n\n\nexport function randomColor() {\n  let num = Math.floor(Math.random() * 100);\n  let color = COLORS[num];\n  return color;\n}\n\nexport function mixColor(color1, color2) {\n  let c1 = chroma(color1);\n  let c2 = chroma(color2);\n  return chroma.mix(c1, c2).hex();\n\n}\n\nfunction avg(num1, num2) {\n  return (num1 + num2) / 2\n}\n\nexport function mixTilesTwo(hex1, hex2) {\n  let color1 = $.Color(hex1).rgba();\n  let color2 = $.Color(hex2).rgba();\n\n  let r = avg(color1[0], color2[0])\n  let g = avg(color1[1], color2[1])\n  let b = avg(color1[2], color2[2])\n\n\n  let rgb = `rgb(${r}, ${g}, ${b})`\n\n\n  return rgb\n\n}\n\n\n\n\n\n\n\n\n\n\n\n","import { randomColor } from '../main/color'\n   \nfunction pickColors(tileAmount) {\n  const colors = [];\n  let i = 0;\n  while ( i < 50 ) {\n    let color = randomColor();\n    if (!colors.includes(color)) {\n      let colorObj = {\n        color: color\n      }\n      colors.push(colorObj);\n      i++;\n    }\n  };\n    return colors;\n}\n  \n  // [start] Fisher-Yates shuffle -- shuffle algorithm resource\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n// [end] Fisher-Yates shuffle\n\nlet tileColors;\nlet matchGrid;\nlet count;\n\nlet selectedTiles = [];\nlet selectedTileIds = [];\nlet tilesCorrect = [];\n\nexport function createMatchGrid() {\n  let colors = pickColors();\n  tileColors = colors.concat(colors);\n  shuffle(tileColors);\n  \n  for ( let i = 0; i < tileColors.length; i++ ) {\n    const tile = document.createElement('div');\n    tile.setAttribute('id', i)\n    tile.setAttribute('class', 'match-tile')\n    tile.style['background-color'] = 'black'\n    tile.style['aspect-ratio'] = 1\n    tile.addEventListener('click', flipTile)\n    \n    matchGrid = document.getElementsByClassName('match-grid')[0];\n    count = document.querySelector('#count');\n    matchGrid.appendChild(tile)\n  };\n  matchGrid.style.display = 'grid';\n  matchGrid.style['grid-gap'] = '2px';\n  matchGrid.style['grid-template-columns'] = '1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr';\n}\n\n\n\nfunction checkPair() {\n  const cards = matchGrid.querySelectorAll('div');\n  const x = selectedTileIds[0];\n  const y = selectedTileIds[1];\n  if (selectedTiles[0] === selectedTiles[1]) {\n    alert('match...');\n    tilesCorrect.push(selectedTiles);\n  } else {\n    // alert('nope.');\n    cards[x].style['background-color'] = 'black';\n    cards[y].style['background-color'] = 'black';\n  }\n  selectedTiles = [];\n  selectedTileIds = [];\n  count.textContent = tilesCorrect.length;\n  if (tilesCorrect.length === tileColors.length/2) {\n    alert('you found them...')\n  }\n}\n  \nfunction flipTile() {\n  let tileId = this.getAttribute('id');\n  selectedTiles.push(tileColors[tileId].color);\n  selectedTileIds.push(tileId);\n  this.style['background-color'] = tileColors[tileId].color;\n  if (selectedTiles.length === 2) {\n    setTimeout(checkPair, 500);\n  }\n}\n","import { COLORS, mixTilesTwo } from '../main/color'\n\n\nlet tileGrid;\n\nlet count = 1;\n\nlet selectedTiles = [];\nlet optionTiles = [];\nlet mixedTiles = [];\nlet currentTile;\nlet allTiles = {};\n\nexport function randomPos() {\n  let x = Math.floor(Math.random() * 10) + 1;\n  let y = Math.floor(Math.random() * 10) + 1;\n  let coor = `${x}-${y}`;\n  return {\n    coor,\n    x,\n    y\n  }\n}\n\nfunction posObject(coor) {\n  let coorArr = coor.split('-');\n  return {\n    coor,\n    x: coorArr[0],\n    y: coorArr[1]\n  }\n}\n\n\n\nexport function createMixGrid() {\n  tileGrid = document.querySelector('.tile-grid');\n  let colorCount = 0;\n\n  for (let x = 1; x <= 10; x++) {\n    for (let y = 1; y <= 10; y++) {\n      let colorId = COLORS[colorCount];\n      let coor = `${x}-${y}`;\n      const tile = document.createElement('div');\n      tile.setAttribute('id', colorCount)\n      tile.setAttribute('colorId', colorId)\n      tile.setAttribute('coor', coor)\n      tile.setAttribute('class', 'mix-tile')\n      tile.style['background-color'] = colorId;\n      tile.style['aspect-ratio'] = 1\n      tile.addEventListener('click', mixTile)\n      let info = {\n        ele: tile,\n        x, \n        y \n      }\n      allTiles[coor] = info;\n      tileGrid.appendChild(tile)\n      colorCount++\n    }\n  };\n  tileGrid.style.display = 'tile-grid';\n  tileGrid.style['grid-gap'] = '2px';\n  tileGrid.style['grid-template-columns'] = '1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr';\n  currentTile = randomPos();\n  console.log(currentTile)\n  markOptions();\n  console.log(allTiles)\n}\n\n\n\nconst OPTIONS = [[-1, 0], [1, 0], [0, -1], [0, 1]]\n\nfunction markOptions() {\n  let tile = allTiles[currentTile.coor];\n  console.log(tile)\n  tile.ele.style.border = '8px inset white';\n  let newOptionTiles = [];\n\n  OPTIONS.forEach(pos => {\n    let newX = pos[0] + tile.x;\n    let newY = pos[1] + tile.y;\n    if ( newX <= 10 && newX > 0 && newY <= 10 && newY > 0 ) {\n      let newCoor = `${newX}-${newY}`\n      newOptionTiles.push(newCoor);\n      let optionTile = allTiles[newCoor].ele;\n      optionTile.style.border = '1px solid white'\n    }\n    \n  });\n  optionTiles = newOptionTiles;\n}\n\nfunction mixTile() {\n  let clickedCoor = this.getAttribute('coor');\n  let check = optionTiles.some(coor => coor === clickedCoor )\n  if (check) {\n    clearStyle();\n\n    let colorOne = allTiles[currentTile.coor].ele.getAttribute('colorId')\n    let colorTwo = this.getAttribute('colorId')\n\n    let rgb = mixTilesTwo(colorOne, colorTwo)\n\n\n\n\n    \n    //current tile\n    // let colorOne = allTiles[currentTile.coor].ele.getAttribute('colorId')\n    // let color1 = $.Color(colorOne);\n    // console.log(`COLOR1  ${color1}`);\n    // //clickedtile\n    // let color2 = $.Color(this.getAttribute('colorId'));\n    // console.log(`COLOR2 ALPHA  ${color2.toHexString()}`);\n    \n    // //set color alpha value\n    // color1 = color1.alpha(color1.alpha());\n    \n    // color2 = color2.alpha(1/count);\n    \n    // //Mixing colors by parts\n    // let finalColor = Color_mixer.mix(color1, color2);\n    \n\n    // // for ( let i = 1; i <= count; i++ ) {\n    // //   finalColor = finalColor.alpha(finalColor.alpha());\n    // //   finalColor = Color_mixer.mix(color1, finalColor)\n    // // }\n    // console.log(count)\n    // count += 1;\n    \n    // //set background color to result color\n    \n\n    this.style['background-color'] = rgb;\n    currentTile = posObject(this.getAttribute('coor'))\n    markOptions();\n  }\n}\n\nfunction clearStyle() {\n  optionTiles.forEach(coor => {\n    let oldTile = allTiles[coor].ele;\n    oldTile.style.border = 'none'\n  })\n}\n\n\n\n\n\nfunction getTilePosition() {\n\n}","import { COLORS, randomColor, mixColor, mixTilesTwo } from '../main/color'\nimport { snakeAdd, snakeEat, SNAKE_COLOR } from './snake'\nimport { randomPos } from './snakeGame'\n\n\nconst BODY_ADD = 3; \nexport let LIVES = 3;\n\nexport let FOOD_COLORS = [\n  { pos: randomPos(), color: randomColor() },\n  { pos: randomPos(), color: randomColor() }\n];\nconst FOOD_ADD = 3;\n\n\n // [start] Fisher-Yates shuffle -- shuffle algorithm resource\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n// [end] Fisher-Yates shuffle\n\n\nlet target;\n\nexport function updateTarget() {\n  // target = document.querySelector('.food-target');\n  let mix = mixTilesTwo(FOOD_COLORS[0].color, SNAKE_COLOR);\n  // target.style['background-color'] = mix;\n  let body = document.querySelector('body')\n  body.style['background-color'] = mix;\n}\n\n\nexport function updateColorFood() {\n  if (snakeEat(FOOD_COLORS[0].pos)) {\n    FOOD_COLORS.shift();\n    snakeAdd(BODY_ADD);\n    foodAdd(FOOD_ADD);\n    shuffle(FOOD_COLORS);\n    updateTarget();\n    LIVES++\n  } \n\n  FOOD_COLORS.forEach(color => {\n    if (snakeEat(color.pos)) {\n      LIVES--\n    }\n  })\n  updateTarget();\n}\n\nfunction foodAdd(amount) {\n  for (let i = 0; i < amount; i++) {\n    let food = { color: randomColor(), pos: randomPos() }\n    FOOD_COLORS.push(food)\n  }\n}\n\nexport function drawColorFood(gameBoard) {\n\n  for (let i = 0; i < FOOD_COLORS.length; i++) {\n  const foodElement = document.createElement('div');\n  foodElement.style.gridRowStart = FOOD_COLORS[i].pos.y;\n  foodElement.style.gridColumnStart = FOOD_COLORS[i].pos.x;\n  // snakeElement.style[]\n  foodElement.classList.add('color-food');\n  foodElement.style['background-color'] = FOOD_COLORS[i].color;\n  gameBoard.appendChild(foodElement);\n  }\n\n}\n\n// function getRandomFoodPos() {\n//   let nextFoodPos;\n\n//   while (nextFoodPos == null || snakeEat(nextFoodPos)) {\n//     nextFoodPos = randomPos()\n//     FOOD_COLOR = randomColor()\n//   } \n//   return nextFoodPos;\n// }","let moveDirection = { x: 0, y: 0 };\nlet lastMove = { x: 0, y: 0 };\n\nwindow.addEventListener('keydown', e => {\n  switch (e.key) {\n    case 'ArrowLeft':\n      if (lastMove.x !== 0) break;\n      moveDirection = { x: -1, y: 0 };\n      break;\n    case 'ArrowRight':\n      if (lastMove.x !== 0) break;\n      moveDirection = { x: 1, y: 0 };\n      break;\n    case 'ArrowUp':\n      if (lastMove.y !== 0) break;\n      moveDirection = { x: 0, y: -1 };\n      break;\n    case 'ArrowDown':\n      if (lastMove.y !== 0) break;\n      moveDirection = { x: 0, y: 1 };\n      break;\n  }\n})\n\nexport function getMoveDirection() {\n  lastMove = moveDirection\n  return moveDirection;\n}","\nimport { getMoveDirection } from './moves';\nimport { mixColor, mixTilesTwo, randomColor } from '../main/color';\nimport { FOOD_COLORS } from './colorFood';\n\n\nexport const SNAKE_SPEED = 5;\nconst SNAKE_ADDITIONS = 1;\nconst snakeBody = [{ x: 15, y: 15 }];\nlet newBody = 0;\nexport let SNAKE_COLOR = randomColor();\n\nexport function updateSnake() {\n  addBody();\n  let move = getMoveDirection();\n  for (let i = snakeBody.length - 2; i >= 0; i--) {\n    snakeBody[i + 1] = { ...snakeBody[i] }\n  }\n  snakeBody[0].x += move.x;\n  snakeBody[0].y += move.y;\n\n}\n\n\nexport function getSnakePos() {\n  return snakeBody[0];\n}\n\nexport function snakeOverlap() {\n  let ignoreHead = true;\n  return snakeEatSelf(snakeBody[0], ignoreHead)\n}\n\nexport function drawSnake(gameBoard) {\n  snakeBody.forEach(part => {\n    const snakeElement = document.createElement('div');\n    snakeElement.style.gridRowStart = part.y;\n    snakeElement.style.gridColumnStart = part.x;\n    // snakeElement.style[]\n    snakeElement.classList.add('snake-body');\n    gameBoard.appendChild(snakeElement)\n\n  })\n\n  let snake = document.querySelectorAll('.snake-body');\n  for (let i = 0; i < snake.length; i++) {\n    snake[i].style['background-color'] = SNAKE_COLOR;\n  }\n}\n\n\nexport function snakeAdd(amount) {\n  let mix = mixTilesTwo(FOOD_COLORS[0].color, SNAKE_COLOR);\n  SNAKE_COLOR = mix\n  newBody += amount;\n}\n\n\n\nexport function snakeEatSelf(position, ignoreHead = false) {\n  \n  return snakeBody.some((part, idx) => {\n    if (ignoreHead && idx === 0) return false;\n    return isEqual(part, position)\n  })\n}\n\nexport function snakeEat(position) {\n  return isEqual(snakeBody[0], position);\n}\n\n\nfunction isEqual(pos1, pos2) {\n  return pos1.x === pos2.x && pos1.y === pos2.y\n\n  // add color mix check\n}\n\nfunction addBody() {\n  for (let i = 0; i < newBody; i++) {\n    snakeBody.push({ ...snakeBody[snakeBody.length - 1] })\n  }\n  newBody = 0;\n}","import { SNAKE_SPEED, drawSnake, updateSnake, getSnakePos, snakeOverlap } from './snake'\nimport { drawColorFood, updateColorFood, LIVES } from './colorFood'\n\n\nlet lastRenderTime = 0;\nlet snakeGrid;\nlet gameOver = false;\nlet livesDiv;\n\n\n\nexport function createSnakeGrid() {\n  snakeGrid = document.querySelector('.snake-grid')\n  livesDiv = document.querySelector('.lives')\n  \n  // for (let i = 0; i < 625; i++) {\n  //   const tile = document.createElement('span');\n  //   tile.setAttribute('id', i);\n  //   tile.setAttribute('class', 'snake-tile');\n  //   tile.style['background-color'] = 'white';\n  //   tile.style['border'] = '1px solid black';\n  //   tile.style['aspect-ratio'] = 1;\n    \n  //   snakeGrid.appendChild(tile)\n  // }\n\n  \n}\n\nexport function main(currentTime) {\n  if (gameOver) {\n    if (confirm('boo.')) {\n      window.location = 'https://jessicaup.github.io/dull./'\n    }\n    return\n  }\n\n  window.requestAnimationFrame(main);\n  const secondsSinceRender = (currentTime - lastRenderTime) / 1000;\n  if (secondsSinceRender < 1 / SNAKE_SPEED) return;\n  lastRenderTime = currentTime;\n\n  update();\n  draw();\n\n}\n\nfunction update() {\n  updateSnake();\n  updateColorFood();\n  checkFail();\n}\n\nfunction draw() {\n  snakeGrid.innerHTML = \"\";\n  drawSnake(snakeGrid);\n  drawColorFood(snakeGrid);\n  livesDiv.innerHTML = `${LIVES}`\n}\n\nfunction checkFail() {\n  gameOver = outOfBounds(getSnakePos()) || snakeOverlap() || LIVES <= 0;\n};\n\nfunction outOfBounds(position) {\n  return (\n    position.x > 35 || position.x < 1 ||\n    position.y > 35 || position.y < 1 \n  )\n}\n\nexport function randomPos() {\n  return {\n    x: Math.floor(Math.random() * 35) + 1,\n    y: Math.floor(Math.random() * 35) + 1\n  }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createMatchGrid } from './matchGame/matchingGame'\nimport { createMixGrid } from './mixPathGame/mixPathGame'\nimport { createSnakeGrid, main } from './snake/snakeGame'\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // let yellow = chroma('#F5FF00')\n  // let blue = chroma('#00C2FF')\n  // let final = chroma.mix(yellow, blue)\n  // console.log(final)\n  \n\n  createMixGrid();\n  // createSnakeGrid();\n  // createMatchGrid();\n  // window.requestAnimationFrame(main);\n\n})\n"],"sourceRoot":""}